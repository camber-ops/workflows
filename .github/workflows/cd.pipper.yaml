on: # yamllint disable-line
  workflow_call:
    inputs:
      devel:
        required: false
        type: boolean
        default: false
      prod:
        required: false
        type: boolean
        default: false
      python_version:
        required: false
        type: string
        default: "3.12"
      shared:
        required: false
        type: boolean
        default: false

# https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
permissions:
  # This is required for AWS OIDC credential access.
  id-token: write
  # This is required for actions/checkout.
  contents: read

jobs:
  pipper_publish:
    runs-on: ubuntu-latest
    steps:
    # https://github.com/actions/checkout
    - uses: actions/checkout@v4
    # Poetry must be installed before python setup for caching to work.
    # https://github.com/actions/setup-python/issues/369
    - name: Install Poetry
      run: pipx install poetry
    # https://github.com/actions/setup-python
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python_version }}
    - name: Poetry Dependencies
      run: |
        poetry install
        poetry env info
    # https://github.com/aws-actions/configure-aws-credentials
    - uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/gh-pipper # yamllint disable-line
        aws-region: us-west-2
    - name: Pipper Dependencies
      run: |
        poetry run task pipper_update
        poetry run task pipper_update --dev
    - name: Pipper Bundle
      run: poetry run task pipper_bundle
    - name: Pipper Publish Devel
      if: inputs.devel
      run: poetry run task pipper_publish_devel
    - name: Pipper Shared Publish Devel
      if: inputs.devel && inputs.shared
      run: poetry run task pipper_shared_publish_devel
    - name: Pipper Publish Prod
      if: inputs.prod
      run: poetry run task pipper_publish
    - name: Pipper Shared Publish Prod
      if: inputs.prod && inputs.shared
      run: poetry run task pipper_shared_publish
